AWSTemplateFormatVersion: '2010-09-09'
Description: 'Setup to monitor sagemaker hyperpod clusters on AWS. Amazon
  Managed Prometheus and Amazon Manged Grafana workspaces with associated IAM
  roles are deployed in the AWS Account. Prometheus and exporter services are
  set up on Cluster Nodes. Create custom dashboard resources for the slurm in
  grafana dashboard. 
  Author: Matt Nightingale - nghtm@, Madhubalasri Balachandran - madbal@'

Parameters:
  CustomResourceS3BucketBaseName:
    Type: String
    Default: hpslurm-observability
    Description: The base name of the S3 bucket containing the custom resource. Region name (e.g. "-us-east-1") will be added to the actual S3 bucket name.
  CustomResourceFunctionS3Key:
    Type: String
    Default: assets/observability-slurm-custom-resource-function.zip
    Description: The S3 key for the lambda function zip file.
  GrafanaServiceAccountfunctionS3Key:
    Type: String
    Default: assets/grafana-service-token-lambda-function.zip
    Description: The S3 key for the lambda function zip file.
  PrometheusExistingWorkspaceId:
    Type: String
    Default: ''
    Description: Existing Prometheus workspace Id that will be used. If not
      provided, a new workspace will be created.
  GrafanaExistingWorkspaceId:
    Type: String
    Default: ''
    Description: Existing Grafana workspace Id that will be used. If not 
      provided, a new workspace will be created.

Conditions:
  CreatePrometheusWorkspace: !Equals
    - !Ref PrometheusExistingWorkspaceId
    - ''
  CreateGrafanaWorkspace: !Equals
    - !Ref GrafanaExistingWorkspaceId
    - ''

Resources:
  AmazonGrafanaWorkspaceIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - grafana.amazonaws.com
            Action:
              - sts:AssumeRole
      RoleName: !Sub ${AWS::StackName}-Grafana-Role
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonGrafanaCloudWatchAccess

  AmazonGrafanaPrometheusPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: AmazonGrafana_Prometheus_policy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - aps:ListWorkspaces
              - aps:DescribeWorkspace
              - aps:QueryMetrics
              - aps:GetLabels
              - aps:GetSeries
              - aps:GetMetricMetadata
            Resource: '*'
      Roles:
        - !Ref AmazonGrafanaWorkspaceIAMRole

  APSWorkspace:
    Type: AWS::APS::Workspace
    Condition: CreatePrometheusWorkspace
    Properties:
      Alias: !Sub ${AWS::StackName}-Hyperpod-WorkSpace
      Tags:
        - Key: Name
          Value: SageMaker Hyperpod PrometheusMetrics

  AmazonGrafanaWorkspace:
    Type: AWS::Grafana::Workspace
    Condition: CreateGrafanaWorkspace
    Properties:
      AccountAccessType: CURRENT_ACCOUNT
      Name: !Sub ${AWS::StackName}-Dashboard
      Description: Amazon Grafana Workspace to monitor SageMaker Cluster
      AuthenticationProviders:
        - AWS_SSO
      PermissionType: SERVICE_MANAGED
      RoleArn: !GetAtt AmazonGrafanaWorkspaceIAMRole.Arn
      DataSources:
        - CLOUDWATCH
        - PROMETHEUS
      OrganizationRoleName: ADMIN

  GrafanaServiceAccountLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - grafana:CreateWorkspaceServiceAccount
                  - grafana:CreateWorkspaceServiceAccountToken
                Resource: '*'
          PolicyName: !Sub ${AWS::StackName}-AMGWS

  GrafanaServiceAccountLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub ${CustomResourceS3BucketBaseName}-${AWS::Region}
        S3Key: !Ref GrafanaServiceAccountfunctionS3Key
      Environment:
        Variables:
          GRAFANA_WORKSPACE_ID: !If
            - CreateGrafanaWorkspace
            - !GetAtt AmazonGrafanaWorkspace.Id
            - !Ref GrafanaExistingWorkspaceId
          REGION: !Sub ${AWS::Region}
          SERVICE_ACCOUNT_NAME: !Sub ${AWS::StackName}-SA
      FunctionName: !Sub ${AWS::StackName}-SAfunction
      Handler: lambda_function.lambda_handler
      MemorySize: 2048
      Role: !GetAtt GrafanaServiceAccountLambdaRole.Arn
      Runtime: python3.12
      Timeout: 900

  GrafanaServiceAccountCustomResource:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt GrafanaServiceAccountLambdaFunction.Arn

  GrafanaCustomResourceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole

  GrafanaCustomResourceFunction:
    Type: AWS::Lambda::Function
    DeletionPolicy: Retain
    Properties:
      Code:
        S3Bucket: !Sub ${CustomResourceS3BucketBaseName}-${AWS::Region}
        S3Key: !Ref CustomResourceFunctionS3Key
      Environment:
        Variables:
          GRAFANA_WORKSPACE_ID: !If
            - CreateGrafanaWorkspace
            - !GetAtt AmazonGrafanaWorkspace.Id
            - !Ref GrafanaExistingWorkspaceId
          PROMETHEUS_WORKSPACE_ID: !If
            - CreatePrometheusWorkspace
            - !GetAtt APSWorkspace.WorkspaceId
            - !Ref PrometheusExistingWorkspaceId
          GRAFANA_WORKSPACE_TOKEN_KEY: !GetAtt GrafanaServiceAccountCustomResource.ServiceAccountTokenKey
          REGION: !Sub ${AWS::Region}
      FunctionName: !Sub ${AWS::StackName}-CRfunction
      Handler: lambda_function.lambda_handler
      MemorySize: 2048
      Role: !GetAtt GrafanaCustomResourceRole.Arn
      Runtime: python3.12
      Timeout: 900

  GrafanaHttpCustomResources:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt GrafanaCustomResourceFunction.Arn

Outputs:
  Region:
    Value: !Ref AWS::Region
  AMPRemoteWriteURL:
    Condition: CreatePrometheusWorkspace
    Value: !Join
      - ''
      - - !GetAtt APSWorkspace.PrometheusEndpoint
        - api/v1/remote_write
  GrafanWorkspaceURL:
    Condition: CreateGrafanaWorkspace
    Value: !Join
      - ''
      - - https://
        - !GetAtt AmazonGrafanaWorkspace.Endpoint