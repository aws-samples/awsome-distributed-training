AWSTemplateFormatVersion: '2010-09-09'
Description: Security Group Stack

Parameters: 
  ResourceNamePrefix:
    Description: Prefix to be used for all resources created by this template.
    Type: String
    Default: sagemaker-hyperpod-eks

  VpcId: 
    Description: The ID of the VPC you wish to use if you do not want to create a new VPC. 
    Type: String
    Default: vpc-1234567890abcdef0

  CrossSGEnabled:
    Description: Whether to enable cross-SG communication
    Type: String
    Default: 'false'
    AllowedValues: ['true', 'false']
  
  CrossSecurityGroupId: 
    Description: The ID of the security group to reference in cross-SG communication rules. 
    Type: String
    Default: sg-1234567890abcdef0

Conditions: 
  CrossSGEnabled: !Equals
    - !Ref CrossSGEnabled
    - 'true'

Resources: 
  NoIngressSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub '${ResourceNamePrefix}-no-ingress-sg'
      GroupDescription: "Security group with no ingress rule"
      VpcId: !Ref VpcId

  IntraSGCommunicationRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: "Allow traffic within the security group"
      GroupId: !Ref NoIngressSecurityGroup
      IpProtocol: -1
      SourceSecurityGroupId: !Ref NoIngressSecurityGroup

  IntraSGCommunicationRuleEgress:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: "Allow traffic within the security group"
      GroupId: !Ref NoIngressSecurityGroup
      IpProtocol: -1
      DestinationSecurityGroupId: !Ref NoIngressSecurityGroup

  InternetCommunicationRuleEgress:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: "Allow traffic to internet"
      GroupId: !Ref NoIngressSecurityGroup
      CidrIp: 0.0.0.0/0
      IpProtocol: -1

  FSxForLustreRule1:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: "Allows Lustre traffic between FSx for Lustre file servers and Lustre clients"
      GroupId: !Ref NoIngressSecurityGroup
      IpProtocol: tcp
      FromPort: 988
      ToPort: 988
      SourceSecurityGroupId: !Ref NoIngressSecurityGroup

  FSxForLustreRule2:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: "Allows Lustre traffic between FSx for Lustre file servers and Lustre clients"
      GroupId: !Ref NoIngressSecurityGroup
      IpProtocol: tcp
      FromPort: 1018
      ToPort: 1023
      SourceSecurityGroupId: !Ref NoIngressSecurityGroup

## ----------------Cross Security Group Rules -------------##
  CrossSGRuleIngress: 
    Type: AWS::EC2::SecurityGroupIngress
    Condition: CrossSGEnabled
    Properties:
      Description: "Allow traffic across security groups"
      GroupId: !Ref NoIngressSecurityGroup
      IpProtocol: -1
      SourceSecurityGroupId: !Ref CrossSecurityGroupId

  CrossSGRuleEgress: 
    Type: AWS::EC2::SecurityGroupEgress
    Condition: CrossSGEnabled
    Properties:
      Description: "Allow traffic across security groups"
      GroupId: !Ref NoIngressSecurityGroup
      IpProtocol: -1
      DestinationSecurityGroupId: !Ref CrossSecurityGroupId

  CrossSGRuleIngress2: 
    Type: AWS::EC2::SecurityGroupIngress
    Condition: CrossSGEnabled
    Properties:
      Description: "Allow traffic across security groups"
      GroupId: !Ref CrossSecurityGroupId
      IpProtocol: -1
      SourceSecurityGroupId: !Ref NoIngressSecurityGroup

  CrossSGRuleEgress2: 
    Type: AWS::EC2::SecurityGroupEgress
    Condition: CrossSGEnabled
    Properties:
      Description: "Allow traffic across security groups"
      GroupId: !Ref CrossSecurityGroupId
      IpProtocol: -1
      DestinationSecurityGroupId: !Ref NoIngressSecurityGroup 

Outputs:
  SecurityGroupId:
    Description: Security Group Id
    Value: !Ref NoIngressSecurityGroup