apiVersion: v1
kind: Namespace
metadata:
  name: hyperpod
  labels:
    name: hyperpod
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: health-monitoring-agent
  namespace: hyperpod
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: health-monitoring-agent-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:health-monitoring-agent
subjects:
  - kind: ServiceAccount
    name: health-monitoring-agent
    namespace: hyperpod
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:health-monitoring-agent
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/status
    verbs:
      - patch
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: health-monitoring-agent
  namespace: hyperpod
  labels:
    app: health-monitoring-agent
spec:
  selector:
    matchLabels:
      app: health-monitoring-agent
  template:
    metadata:
      labels:
        app: health-monitoring-agent
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node.kubernetes.io/instance-type
                    operator: In
                    values:
                      - ml.p5.48xlarge
                      - ml.p4d.24xlarge
                      - ml.p4de.24xlarge
                      - ml.g5.xlarge
                      - ml.g5.2xlarge
                      - ml.g5.4xlarge
                      - ml.g5.8xlarge
                      - ml.g5.12xlarge
                      - ml.g5.16xlarge
                      - ml.g5.24xlarge
                      - ml.g5.48xlarge
                      - ml.inf2.xlarge
                      - ml.inf2.8xlarge
                      - ml.inf2.24xlarge
                      - ml.inf2.48xlarge
                      - ml.trn1.32xlarge
                      - ml.trn1n.32xlarge
      initContainers:
        - name: init-permissions
          image: 590183648699.dkr.ecr.us-west-2.amazonaws.com/hyperpod-health-monitoring-agent:1.0.176.0_1.0.12.0
          command:
            - sh
            - -c
            - |
              set -x
              echo "Changing ownership for /var/log/messages"
              chown -R root:2000 /var/log/messages
              echo "Changing permissions for /var/log/messages"
              chmod 450 /var/log/messages
              echo "Changing ownership for /var/log/aws"
              chown -R root:2000 /var/log/aws
              echo "Changing permissions for /var/log/aws"
              chmod -R 770 /var/log/aws
              echo "Init container completed successfully"
          securityContext:
            runAsUser: 0
          volumeMounts:
            - mountPath: /var/log
              name: log
      containers:
        - name: health-monitoring-agent
          args:
            - --enable-k8s-exporter=false
            - --config.system-log-monitor=/config/system-message-monitor.json
          image: 590183648699.dkr.ecr.us-west-2.amazonaws.com/hyperpod-health-monitoring-agent:1.0.176.0_1.0.12.0
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 512Mi
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1000
            runAsGroup: 2000
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          volumeMounts:
            - name: log
              mountPath: /var/log
            - name: kmsg
              mountPath: /dev/kmsg
              readOnly: true
            # Make sure node problem detector is in the same timezone
            # with the host.
            - name: localtime
              mountPath: /etc/localtime
              readOnly: true
      serviceAccountName: health-monitoring-agent
      volumes:
        - name: log
          # Config `log` to your system log directory
          hostPath:
            path: /var/log/
        - name: kmsg
          hostPath:
            path: /dev/kmsg
        - name: localtime
          hostPath:
            path: /etc/localtime
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
