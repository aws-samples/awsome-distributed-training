Imds:
  ImdsSupport: v2.0
Image:
  Os: alinux2
  CustomAmi: ami-053d893ccc907c49c
Tags:
  - Key: 'Grafana'
    Value: 'true'
HeadNode:
  InstanceType: c6i.8xlarge
  Networking:
    SubnetId: subnet-08cdcb1f4d6abc7f3
    AdditionalSecurityGroups:
      - sg-0bbb389be5f1e6563
  Ssh:
    KeyName: pcluster-key
  LocalStorage:
    RootVolume:
      Size: 100
      DeleteOnTermination: true # that's your root and /home volume for users
  CustomActions:
    OnNodeConfigured:
      Script: https://raw.githubusercontent.com/aws-samples/aws-parallelcluster-monitoring/main/post-install.sh
      Args:
        - v0.9
  Iam:
    AdditionalIamPolicies: # grant ECR, SSM and S3 read access
      - Policy: arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      - Policy: arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
      - Policy: arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
      - Policy: arn:aws:iam::aws:policy/CloudWatchFullAccess
      - Policy: arn:aws:iam::aws:policy/AWSPriceListServiceFullAccess
      - Policy: arn:aws:iam::aws:policy/AmazonSSMFullAccess
      - Policy: arn:aws:iam::aws:policy/AWSCloudFormationReadOnlyAccess
Scheduling:
  Scheduler: slurm
  SlurmSettings:
    ScaledownIdletime: 60
  SlurmQueues:
    - Name: compute-gpu
      CapacityType: ONDEMAND
      Networking:
        SubnetIds:
          - subnet-04226fa682376b4f6
        PlacementGroup:
          Enabled: true
      ComputeSettings:
        LocalStorage:
          EphemeralVolume:
            MountDir: /local_scratch # each instance has a local scratch on NVMe
          RootVolume:
            Size: 200
      CustomActions:
        OnNodeConfigured:
          Script: https://raw.githubusercontent.com/aws-samples/aws-parallelcluster-monitoring/main/post-install.sh
          Args:
            - v0.9
      Iam:
        AdditionalIamPolicies:
          - Policy: arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
          - Policy: arn:aws:iam::aws:policy/CloudWatchFullAccess
          - Policy: arn:aws:iam::aws:policy/AWSPriceListServiceFullAccess
          - Policy: arn:aws:iam::aws:policy/AmazonSSMFullAccess
          - Policy: arn:aws:iam::aws:policy/AWSCloudFormationReadOnlyAccess
      # The capacity reservation section is recommended if you use instances
      # with a targeted ODCRs. You can also use a capacity resource group and
      # CapacityReservationResourceGroupArn if you want to regroup
      # multiple reservations
      #CapacityReservationTarget:
      #  CapacityReservationId: PLACEHOLDER_CAPACITY_RESERVATION_ID
      ComputeResources:
        - Name: distributed-ml
          InstanceType: g4dn.12xlarge
          MinCount: 0 # if min = max then capacity is maintained and will
          MaxCount: 4 # not scale down
          Efa:
            Enabled: true
SharedStorage:
  - MountDir: /fsx
    Name: fsx
    StorageType: FsxLustre
    FsxLustreSettings:
      StorageCapacity: 4800 # size it to your storage and throughput needs
      PerUnitStorageThroughput: 250 # this can be increased to 500 and 100
      DeploymentType: PERSISTENT_2
  - Name: SharedEBS
    StorageType: Ebs
    MountDir: /apps # Store your shared apps & scripts here
    EbsSettings:
      VolumeType: gp3
      Size: 200
      Throughput: 300
      Iops: 6000
Monitoring:
  DetailedMonitoring: true
  Logs:
    CloudWatch:
      Enabled: true # good for debug
  Dashboards:
    CloudWatch:
      Enabled: false # provide basic dashboards


