AWSTemplateFormatVersion: "2010-09-09"

Description: Amazon EKS - Create an unmanaged P4d/P5 node group for Capacity Blocks for ML.

Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: EKS Cluster
        Parameters:
          - ClusterName
          - ClusterControlPlaneSecurityGroup
      - Label:
          default: Worker Node Configuration
        Parameters:
          - NodeGroupName
          - NodeAutoScalingGroupMinSize
          - NodeAutoScalingGroupDesiredCapacity
          - NodeAutoScalingGroupMaxSize
          - NodeInstanceType
          - NodeImageIdSSMParam
          - NodeImageId
          - NodeVolumeSize
          - NodeVolumeType
          - KeyName
          - BootstrapArguments
          - DisableIMDSv1
      - Label:
          default: Worker Network Configuration
        Parameters:
          - VpcId
          - Subnets

Parameters:
  BootstrapArguments:
    Type: String
    Default: ""
    Description: "Arguments to pass to the bootstrap script. See files/bootstrap.sh in https://github.com/awslabs/amazon-eks-ami"

  ClusterControlPlaneSecurityGroup:
    Type: "AWS::EC2::SecurityGroup::Id"
    Description: Additional Security Group from the EKS Cluster, grab this from the EKS console > Networking > Additional Security group.

  ClusterName:
    Type: String
    Description: The cluster name provided when the cluster was created. If it is incorrect, nodes will not be able to join the cluster.

  KeyName:
    Type: "AWS::EC2::KeyPair::KeyName"
    Description: The EC2 Key Pair to allow SSH access to the instances

  NodeAutoScalingGroupDesiredCapacity:
    Type: Number
    Default: 3
    Description: Desired capacity of Node Group ASG.

  NodeAutoScalingGroupMaxSize:
    Type: Number
    Default: 4
    Description: Maximum size of Node Group ASG. Set to at least 1 greater than NodeAutoScalingGroupDesiredCapacity.

  NodeAutoScalingGroupMinSize:
    Type: Number
    Default: 1
    Description: Minimum size of Node Group ASG.

  NodeGroupName:
    Type: String
    Description: Unique identifier for the Node Group.

  NodeImageId:
    Type: String
    Default: ""
    Description: (Optional) Specify your own custom image ID. This value overrides any AWS Systems Manager Parameter Store value specified above.

  NodeImageIdSSMParam:
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>"
    Default: /aws/service/eks/optimized-ami/1.29/amazon-linux-2-gpu/recommended/image_id
    Description: AWS Systems Manager Parameter Store parameter of the AMI ID for the worker node instances. Change this value to match the version of Kubernetes you are using.

  DisableIMDSv1:
    Type: String
    Default: "false"
    AllowedValues:
      - "false"
      - "true"

  NodeInstanceType:
    Type: String
    Default: p5.48xlarge
    AllowedValues:
      - p5.48xlarge
      - p4d.24xlarge
    Description: EC2 instance type for the node instances

  NodeVolumeSize:
    Type: Number
    Default: 500
    Description: Node volume size

  NodeVolumeType:
    Type: String
    Default: "gp2"
    Description: EBS volume type for nodes

  Subnets:
    Type: "List<AWS::EC2::Subnet::Id>"
    Description: The subnets where workers can be created. This must be the same AZ as the Capacity Block.

  VpcId:
    Type: "AWS::EC2::VPC::Id"
    Description: The VPC of the worker instances

  CapacityBlockId:
    Type: String
    Description: The id like cr-xxxxxxxx of the capacity block.
  

Mappings:
  PartitionMap:
    aws:
      EC2ServicePrincipal: "ec2.amazonaws.com"
    aws-us-gov:
      EC2ServicePrincipal: "ec2.amazonaws.com"
    aws-cn:
      EC2ServicePrincipal: "ec2.amazonaws.com.cn"
    aws-iso:
      EC2ServicePrincipal: "ec2.c2s.ic.gov"
    aws-iso-b:
      EC2ServicePrincipal: "ec2.sc2s.sgov.gov"

Conditions:
  HasNodeImageId: !Not
    - "Fn::Equals":
      - !Ref NodeImageId
      - ""
  isP5: !Equals
      - !Ref NodeInstanceType
      - "p5.48xlarge"
  isP4d: !Equals
      - !Ref NodeInstanceType
      - "p4d.24xlarge"

  IMDSv1Disabled:
    "Fn::Equals":
      - !Ref DisableIMDSv1
      - "true"

Resources:
  NodeInstanceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - !FindInMap [PartitionMap, !Ref "AWS::Partition", EC2ServicePrincipal]
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonEKSWorkerNodePolicy"
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonEKS_CNI_Policy"
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore"
      Path: /

  NodeInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: /
      Roles:
        - !Ref NodeInstanceRole

  NodeSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Security group for all nodes in the cluster
      Tags:
        - Key: !Sub kubernetes.io/cluster/${ClusterName}
          Value: owned
      VpcId: !Ref VpcId

  EFASecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: All to all communication for EFA Ingress within Security Group
      IpProtocol: -1
      FromPort: -1
      ToPort: -1
      GroupId: !Ref NodeSecurityGroup
      SourceSecurityGroupId: !Ref NodeSecurityGroup

  EFASecurityGroupEgress:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: All to all communication for EFA Egress  within Security Group
      IpProtocol: -1
      FromPort: -1
      ToPort: -1
      GroupId: !Ref NodeSecurityGroup
      DestinationSecurityGroupId: !Ref NodeSecurityGroup

  NodeSecurityGroupIngress:
    Type: "AWS::EC2::SecurityGroupIngress"
    DependsOn: NodeSecurityGroup
    Properties:
      Description: Allow node to communicate with each other
      FromPort: 0
      GroupId: !Ref NodeSecurityGroup
      IpProtocol: "-1"
      SourceSecurityGroupId: !Ref NodeSecurityGroup
      ToPort: 65535

  NodeSecurityGroupEgress:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Allow outbound internet traffic.
      IpProtocol: -1
      FromPort: -1
      ToPort: -1
      GroupId: !Ref NodeSecurityGroup
      CidrIp: 0.0.0.0/0

  ClusterControlPlaneSecurityGroupIngress:
    Type: "AWS::EC2::SecurityGroupIngress"
    DependsOn: NodeSecurityGroup
    Properties:
      Description: Allow pods to communicate with the cluster API Server
      FromPort: 443
      GroupId: !Ref ClusterControlPlaneSecurityGroup
      IpProtocol: tcp
      SourceSecurityGroupId: !Ref NodeSecurityGroup
      ToPort: 443

  ControlPlaneEgressToNodeSecurityGroup:
    Type: "AWS::EC2::SecurityGroupEgress"
    DependsOn: NodeSecurityGroup
    Properties:
      Description: Allow the cluster control plane to communicate with worker Kubelet and pods
      DestinationSecurityGroupId: !Ref NodeSecurityGroup
      FromPort: 1025
      GroupId: !Ref ClusterControlPlaneSecurityGroup
      IpProtocol: tcp
      ToPort: 65535

  ControlPlaneEgressToNodeSecurityGroupOn443:
    Type: "AWS::EC2::SecurityGroupEgress"
    DependsOn: NodeSecurityGroup
    Properties:
      Description: Allow the cluster control plane to communicate with pods running extension API servers on port 443
      DestinationSecurityGroupId: !Ref NodeSecurityGroup
      FromPort: 443
      GroupId: !Ref ClusterControlPlaneSecurityGroup
      IpProtocol: tcp
      ToPort: 443

  NodeSecurityGroupFromControlPlaneIngress:
    Type: "AWS::EC2::SecurityGroupIngress"
    DependsOn: NodeSecurityGroup
    Properties:
      Description: Allow worker Kubelets and pods to receive communication from the cluster control plane
      FromPort: 1025
      GroupId: !Ref NodeSecurityGroup
      IpProtocol: tcp
      SourceSecurityGroupId: !Ref ClusterControlPlaneSecurityGroup
      ToPort: 65535

  NodeSecurityGroupFromControlPlaneOn443Ingress:
    Type: "AWS::EC2::SecurityGroupIngress"
    DependsOn: NodeSecurityGroup
    Properties:
      Description: Allow pods running extension API servers on port 443 to receive communication from cluster control plane
      FromPort: 443
      GroupId: !Ref NodeSecurityGroup
      IpProtocol: tcp
      SourceSecurityGroupId: !Ref ClusterControlPlaneSecurityGroup
      ToPort: 443

  NodeLaunchTemplateP5:
    Type: "AWS::EC2::LaunchTemplate"
    Condition: isP5
    Properties:
      LaunchTemplateData:
        InstanceMarketOptions:
          MarketType: "capacity-block"
        CapacityReservationSpecification:
          CapacityReservationTarget:
            CapacityReservationId: !Ref CapacityBlockId
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              DeleteOnTermination: true
              VolumeSize: !Ref NodeVolumeSize
              VolumeType: !Ref NodeVolumeType
        IamInstanceProfile:
          Arn: !GetAtt NodeInstanceProfile.Arn
        ImageId: !If
          - HasNodeImageId
          - !Ref NodeImageId
          - !Ref NodeImageIdSSMParam
        InstanceType: !Ref NodeInstanceType
        KeyName: !Ref KeyName
        NetworkInterfaces:
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 0
            DeviceIndex: 0
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 1
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 2
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 3
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 4
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 5
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 6
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 7
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 8
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 9
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 10
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 11
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 12
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 13
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 14
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 15
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 16
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 17
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 18
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 19
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 20
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 21
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 22
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 23
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 24
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 25
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 26
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 27
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 28
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 29
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 30
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 31
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
        UserData: !Base64
          "Fn::Sub": |
            Content-Type: multipart/mixed; boundary="==BOUNDARY=="
            MIME-Version: 1.0

            --==BOUNDARY==
            Content-Type: text/cloud-boothook; charset="us-ascii"
            cloud-init-per once yum_wget yum install -y wget
            cloud-init-per once wget_efa wget -q --timeout=20 https://s3-us-west-2.amazonaws.com/aws-efa-installer/aws-efa-installer-latest.tar.gz -O /tmp/aws-efa-installer-latest.tar.gz

            cloud-init-per once tar_efa tar -xf /tmp/aws-efa-installer-latest.tar.gz -C /tmp
            pushd /tmp/aws-efa-installer
            cloud-init-per once install_efa ./efa_installer.sh -y -g
            pop /tmp/aws-efa-installer

            cloud-init-per once efa_info /opt/amazon/efa/bin/fi_info -p efa

            --==BOUNDARY==
            Content-Type: text/x-shellscript; charset="us-ascii"

            #!/bin/bash
            set -o xtrace

            /etc/eks/bootstrap.sh ${ClusterName} ${BootstrapArguments}
            /opt/aws/bin/cfn-signal --exit-code $? \
                     --stack  ${AWS::StackName} \
                     --resource NodeGroup  \
                     --region ${AWS::Region}
            --==BOUNDARY==--
        MetadataOptions:
          HttpPutResponseHopLimit : 2
          HttpEndpoint: enabled
          HttpTokens: !If
            - IMDSv1Disabled
            - required
            - optional
  NodeLaunchTemplateP4:
    Type: "AWS::EC2::LaunchTemplate"
    Condition: isP4d
    Properties:
      LaunchTemplateData:
        InstanceMarketOptions:
          MarketType: "capacity-block"
        CapacityReservationSpecification:
          CapacityReservationTarget:
            CapacityReservationId: !Ref CapacityBlockId
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              DeleteOnTermination: true
              VolumeSize: !Ref NodeVolumeSize
              VolumeType: !Ref NodeVolumeType
        IamInstanceProfile:
          Arn: !GetAtt NodeInstanceProfile.Arn
        ImageId: !If
          - HasNodeImageId
          - !Ref NodeImageId
          - !Ref NodeImageIdSSMParam
        InstanceType: !Ref NodeInstanceType
        KeyName: !Ref KeyName
        NetworkInterfaces:
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 0
            DeviceIndex: 0
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 1
            DeviceIndex: 1
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 2
            DeviceIndex: 2
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
          - Description: NetworkInterfaces Configuration For EFA and EKS
            NetworkCardIndex: 3
            DeviceIndex: 3
            DeleteOnTermination: true
            Groups:
              - !Ref NodeSecurityGroup
            InterfaceType: efa
        UserData: !Base64
          "Fn::Sub": |
            Content-Type: multipart/mixed; boundary="==BOUNDARY=="
            MIME-Version: 1.0

            --==BOUNDARY==
            Content-Type: text/cloud-boothook; charset="us-ascii"
            cloud-init-per once yum_wget yum install -y wget
            cloud-init-per once wget_efa wget -q --timeout=20 https://s3-us-west-2.amazonaws.com/aws-efa-installer/aws-efa-installer-latest.tar.gz -O /tmp/aws-efa-installer-latest.tar.gz

            cloud-init-per once tar_efa tar -xf /tmp/aws-efa-installer-latest.tar.gz -C /tmp
            pushd /tmp/aws-efa-installer
            cloud-init-per once install_efa ./efa_installer.sh -y -g
            pop /tmp/aws-efa-installer

            cloud-init-per once efa_info /opt/amazon/efa/bin/fi_info -p efa

            --==BOUNDARY==
            Content-Type: text/x-shellscript; charset="us-ascii"

            #!/bin/bash
            set -o xtrace

            /etc/eks/bootstrap.sh ${ClusterName} ${BootstrapArguments}
            /opt/aws/bin/cfn-signal --exit-code $? \
                     --stack  ${AWS::StackName} \
                     --resource NodeGroup  \
                     --region ${AWS::Region}
            --==BOUNDARY==--
        MetadataOptions:
          HttpPutResponseHopLimit : 2
          HttpEndpoint: enabled
          HttpTokens: !If
            - IMDSv1Disabled
            - required
            - optional

  NodeGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      DesiredCapacity: !Ref NodeAutoScalingGroupDesiredCapacity
      LaunchTemplate:
        LaunchTemplateId: !If
          - isP5
          - !Ref NodeLaunchTemplateP5
          - !Ref NodeLaunchTemplateP4
        Version: !If
          - isP5
          - !GetAtt NodeLaunchTemplateP5.LatestVersionNumber
          - !GetAtt NodeLaunchTemplateP4.LatestVersionNumber
      MaxSize: !Ref NodeAutoScalingGroupMaxSize
      MinSize: !Ref NodeAutoScalingGroupMinSize
      Tags:
        - Key: Name
          PropagateAtLaunch: true
          Value: !Sub ${ClusterName}-${NodeGroupName}-Node
        - Key: !Sub kubernetes.io/cluster/${ClusterName}
          PropagateAtLaunch: true
          Value: owned
      VPCZoneIdentifier: !Ref Subnets
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MaxBatchSize: 1
        MinInstancesInService: !Ref NodeAutoScalingGroupDesiredCapacity
        PauseTime: PT5M

Outputs:
  NodeInstanceRole:
    Description: The node instance role
    Value: !GetAtt NodeInstanceRole.Arn

  NodeSecurityGroup:
    Description: The security group for the node group
    Value: !Ref NodeSecurityGroup

  NodeAutoScalingGroup:
    Description: The autoscaling group
    Value: !Ref NodeGroup